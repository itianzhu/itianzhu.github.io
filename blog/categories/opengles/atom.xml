<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Opengles | tz's Blog]]></title>
  <link href="http://itianzhu.github.io/blog/categories/opengles/atom.xml" rel="self"/>
  <link href="http://itianzhu.github.io/"/>
  <updated>2013-12-19T22:57:19+08:00</updated>
  <id>http://itianzhu.github.io/</id>
  <author>
    <name><![CDATA[tz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用GPUImage的例子]]></title>
    <link href="http://itianzhu.github.io/blog/2013/12/19/shi-yong-gpuimagede-li-zi/"/>
    <updated>2013-12-19T22:53:13+08:00</updated>
    <id>http://itianzhu.github.io/blog/2013/12/19/shi-yong-gpuimagede-li-zi</id>
    <content type="html"><![CDATA[<p>这是一个使用GPUImage录制实时滤镜录像的例子，会涉及到
&ndash; git submodule 的使用
&ndash; 在项目中引用别的项目
&ndash; GPUImage的逻辑</p>

<p>一、创建工程，到工程的根目录,执行以下操作
<code>
git init
git submodule add git submodule add 'https://github.com/BradLarson/GPUImage.git' GPUImage //会以最后的参数GPUImgae为名创建文件夹，否者默认为项目
// 下面做常规的git操作
</code></p>

<p>二、在项目中引用别的项目</p>

<ol>
<li>把GPUImage项目工程文件添加到当前工程里，拖进去就可以了</li>
<li>在Build Phases/Target Dependencies中添加GPUImage</li>
<li>在Build Phases/Link Binary With Libraries中添加libGPUImage.a,和其它GPUImage需要的lib</li>
<li>在Build Setting中设置Hearder Search Paths中添加GPUImage/framework,并且选择recursive</li>
<li>在info中添加Application supports iTunes file sharing(or raw UIFileSharingEnabled)，这样就可以在iTunes中查看Documents中的文件</li>
</ol>


<p>三、GPUImage的逻辑,其实就是类似流水线
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">GPUImageVideoCamera</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithSessionPreset:</span><span class="n">AVCaptureSessionPreset640x480</span> <span class="nl">cameraPosition:</span><span class="n">AVCaptureDevicePositionBack</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">camera</span><span class="p">.</span><span class="n">outputImageOrientation</span> <span class="o">=</span> <span class="n">UIInterfaceOrientationPortrait</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">camera</span><span class="p">.</span><span class="n">horizontallyMirrorFrontFacingCamera</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">camera</span><span class="p">.</span><span class="n">horizontallyMirrorRearFacingCamera</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">self</span><span class="p">.</span><span class="n">filter</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">GPUImageSepiaFilter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">camera</span> <span class="nl">addTarget:</span><span class="n">_filter</span><span class="p">];</span><span class="c1">//类似流水线，camera作为output，而input到filter中&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">GPUImageView</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">filterView</span> <span class="o">=</span> <span class="p">(</span><span class="n">GPUImageView</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">filter</span> <span class="nl">addTarget:</span><span class="n">filterView</span><span class="p">];</span><span class="c1">//类似流水线，&lt;/em&gt;filter作为output，而input到filterView中</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
一个output可以添加多个input，比如后面，filter又添加了一个input:writer
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">writer</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">GPUImageMovieWriter</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithMovieURL:</span><span class="n">movieURL</span> <span class="nl">size:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mf">480.0</span><span class="p">,</span> <span class="mf">640.0</span><span class="p">)]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">filter</span> <span class="nl">addTarget:</span><span class="n">self</span><span class="p">.</span><span class="n">writer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
而录音的输出只有一个，只能赋值
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">camera</span><span class="p">.</span><span class="n">audioEncodingTarget</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">writer</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
详细信息可以参考源代码<br/>
<a href="https://github.com/itianzhu/StyleVideoMaker  ">https://github.com/itianzhu/StyleVideoMaker  </a>
clone此代码后，为了使用submodule需要执行
<code>
git submodule init
git submodule update
</code></p>
]]></content>
  </entry>
  
</feed>
